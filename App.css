/*
 * LCARS (Library Computer Access/Retrieval System) Theme for Nexus Project
 */

:root {
  --lcars-primary: #FF9900; /* Orange */
  --lcars-secondary: #CC99FF; /* Lavender */
  --lcars-tertiary: #99CCFF; /* Light Blue */
  --lcars-background: #000000;
  --lcars-text: #FFFFFF;
  --lcars-header-bg: var(--lcars-secondary);
  --lcars-header-text: var(--lcars-background);
  --lcars-border-radius: 10px;
  --status-nominal: #66CC66;
  --status-active: #FFCC00;
  --status-offline: #CC6666;
  --status-error: #FF6666;
  --status-completed: #66CC66;
  --status-in-progress: #FFCC00;
  --status-pending: #99CCFF;

  font-family: 'Roboto Condensed', sans-serif;
  color: var(--lcars-text);
  background-color: var(--lcars-background);
}

body {
  margin: 0;
  padding: 0;
  overflow: hidden; /* Prevent scrolling on the main body */
}

#root {
  height: 100vh;
  width: 100vw;
  display: flex;
}

/* LCARS Main Container */
.lcars-container {
  display: grid;
  grid-template-columns: 280px 1fr; /* Fixed sidebar, flexible main */
  grid-template-rows: auto 1fr auto;
  grid-template-areas:
    "header header"
    "sidebar main"
    "footer footer";
  height: 100vh;
  width: 100%;
  background-color: var(--lcars-background);
  color: var(--lcars-text);
  overflow: hidden;
}

/* Header */
.lcars-header {
  grid-area: header;
  background-color: var(--lcars-primary);
  color: var(--lcars-background);
  padding: 5px 20px;
  font-family: 'Orbitron', sans-serif;
  font-size: 1.5rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 2px solid var(--lcars-secondary);
  height: 60px; /* Explicit height */
}

.lcars-header-text {
  font-weight: 700;
}

.lcars-header-info span {
  font-size: 0.8rem;
  margin-left: 20px;
}

/* Main Content Area */
.lcars-main {
  grid-area: main;
  padding: 1rem;
  overflow-y: auto; /* FIX: Allow scrolling for views that overflow. */
  background: radial-gradient(circle, rgba(10,10,25,1) 0%, rgba(0,0,0,1) 100%);
}

/* Footer */
.lcars-footer {
  grid-area: footer;
  background-color: var(--lcars-tertiary);
  color: var(--lcars-background);
  padding: 5px 20px;
  font-family: 'Orbitron', sans-serif;
  font-size: 0.8rem;
  text-align: right;
  border-top: 2px solid var(--lcars-secondary);
  height: 40px; /* Explicit height */
}

/* Sidebar */
.lcars-sidebar {
    grid-area: sidebar;
    background-color: #111;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    border-right: 2px solid var(--lcars-primary);
    overflow-y: auto;
}
.lcars-sidebar-title {
    font-family: 'Orbitron', sans-serif;
    color: var(--lcars-tertiary);
    text-transform: uppercase;
    margin: 1.5rem 0 0.5rem 0;
    font-size: 0.9rem;
}
.lcars-sidebar-buttons {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.lcars-btn {
  background-color: var(--lcars-secondary);
  color: var(--lcars-background);
  border: none;
  padding: 0.75rem 1rem;
  text-align: left;
  font-family: 'Orbitron', sans-serif;
  font-size: 1rem;
  cursor: pointer;
  transition: all 0.2s ease-in-out;
  border-radius: 0;
  border-left: 10px solid var(--lcars-secondary);
  position: relative;
  display: flex;
  align-items: center;
  gap: 1rem;
}

.lcars-btn:hover {
  background-color: var(--lcars-tertiary);
  border-left-color: var(--lcars-tertiary);
  color: #000;
}

.lcars-btn.active {
  background-color: var(--lcars-primary);
  border-left-color: var(--lcars-primary);
  color: #000;
  font-weight: bold;
}

/* General Module Panel Styling */
.module-panel {
  background-color: rgba(17, 17, 34, 0.8);
  border: 1px solid var(--lcars-tertiary);
  padding: 1rem;
  display: flex;
  flex-direction: column;
}

.module-panel h3 {
  font-family: 'Orbitron', sans-serif;
  color: var(--lcars-primary);
  border-bottom: 2px solid var(--lcars-secondary);
  padding-bottom: 0.5rem;
  margin-top: 0;
}

.module-panel h4 {
    font-family: 'Orbitron', sans-serif;
    color: var(--lcars-secondary);
    margin-top: 1rem;
    margin-bottom: 0.5rem;
}

.module-response {
    background-color: #000;
    border-left: 3px solid var(--lcars-primary);
    padding: 0.75rem;
    margin-top: 1rem;
    white-space: pre-wrap;
    font-size: 0.9rem;
    max-height: 200px;
    overflow-y: auto;
}

button {
  background-color: var(--lcars-secondary);
  color: var(--lcars-background);
  border: none;
  padding: 0.5rem 1rem;
  cursor: pointer;
  transition: background-color 0.2s;
  font-family: 'Roboto Condensed', sans-serif;
}

button:hover:not(:disabled) {
  background-color: var(--lcars-tertiary);
}

button:disabled {
  background-color: #555;
  color: #999;
  cursor: not-allowed;
}

textarea, input[type="text"], input[type="search"] {
    background-color: #000;
    border: 1px solid var(--lcars-secondary);
    color: var(--lcars-text);
    padding: 0.5rem;
    width: 100%;
    box-sizing: border-box;
    font-family: 'Roboto Condensed', sans-serif;
}

/* Spinner */
.spinner-container {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1rem;
}
.spinner {
  border: 4px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top: 4px solid var(--lcars-primary);
  width: 30px;
  height: 30px;
  animation: spin 1s linear infinite;
}
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Progress Bar */
.progress-bar-container {
  width: 100%;
  background-color: #333;
  border: 1px solid var(--lcars-secondary);
  height: 1.2rem;
  padding: 2px;
}
.progress-bar {
  background-color: var(--lcars-primary);
  height: 100%;
  transition: width 0.5s ease-in-out;
}


/* === COMMAND DECK === */
/* Fix: Resolved scrolling loop by giving the grid a fixed height and making the left column scrollable. */
.command-deck-grid {
    display: grid;
    grid-template-columns: minmax(0, 2fr) 1fr;
    gap: 1rem;
    /* Set a fixed height that matches the available space in lcars-main */
    height: calc(100vh - 100px - 2rem); /* header(60)+footer(40) height + main padding(2rem) */
}

.dashboard-container {
    /* Make this column scrollable */
    overflow-y: auto;
    /* Add some padding to the right for the scrollbar to prevent content overlap */
    padding-right: 0.5rem;
}

.agent-panel-container {
    /* This panel now naturally fills its grid cell's height */
    height: 100%;
}


.dashboard-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: auto auto;
    gap: 1rem;
    grid-template-areas: 
        "mission agent"
        "status orchestrator";
}
.mission-control { grid-area: mission; }
.agent-explorer-container { grid-area: agent; }
.system-status-container { grid-area: status; }
.orchestration-monitor-container { grid-area: orchestrator; }

.agent-explorer .agent-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 1rem;
}

.agent-card {
    background-color: #1a1a2e;
    border: 1px solid var(--lcars-secondary);
    cursor: pointer;
    transition: all 0.2s;
    display: flex;
    gap: 1rem;
    padding: 0.5rem;
}
.agent-card:hover {
    border-color: var(--lcars-primary);
    transform: translateY(-2px);
}
.agent-card.selected {
    border-color: var(--lcars-primary);
    box-shadow: 0 0 10px var(--lcars-primary);
}
.agent-avatar img {
    width: 80px;
    height: 80px;
    object-fit: cover;
    border: 2px solid var(--lcars-tertiary);
}
.agent-info h4 { margin: 0 0 0.5rem 0; color: var(--lcars-primary); }
.agent-info p { margin: 0.2rem 0; font-size: 0.8rem; }
.agent-card .performance-bar {
  background-color: #333;
  width: 100%;
  height: 5px;
  margin-top: 0.5rem;
}
.agent-card .performance-bar div {
  background-color: var(--lcars-tertiary);
  height: 100%;
}

.status-active, .status-running, .status-deployed, .status-online, .status-in_progress, .status-in-progress, .status-patrolling { border-left-color: var(--status-active) !important; color: var(--status-active); }
.status-idle, .status-pending { border-left-color: var(--lcars-tertiary) !important; color: var(--lcars-tertiary); }
.status-offline, .status-error, .status-failed, .status-maintenance { border-left-color: var(--status-error) !important; color: var(--status-error); }
.status-completed, .status-processed, .status-delivered { border-left-color: var(--status-nominal) !important; color: var(--status-nominal); }


/* Agent Panel & Chat */
.agent-panel {
    display: flex;
    flex-direction: column;
    height: 100%; /* Fill the sticky container */
}
.agent-panel-header {
    display: flex;
    gap: 1rem;
    border-bottom: 1px solid var(--lcars-secondary);
    padding-bottom: 1rem;
    align-items: center;
}
.specialized-dashboard-btn {
    width: 100%;
    margin: 1rem 0;
}
.chat-messages {
    flex-grow: 1;
    overflow-y: auto;
    padding: 0.5rem;
    background-color: #000;
    border: 1px solid var(--lcars-secondary);
    min-height: 150px; /* Ensure it has some height */
}
.message {
    margin-bottom: 0.5rem;
    padding: 0.5rem;
    max-width: 80%;
}
.message.user {
    background-color: var(--lcars-tertiary);
    color: #000;
    margin-left: auto;
    border-radius: 10px 10px 0 10px;
}
.message.agent, .message.orchestrator {
    background-color: var(--lcars-secondary);
    color: #000;
    margin-right: auto;
    border-radius: 10px 10px 10px 0;
}
.chat-input {
    display: flex;
    margin-top: 0.5rem;
}
.chat-input input { flex-grow: 1; }
.chat-input button { border-radius: 0; }

/* Modal */
.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.75);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
}
.modal-content {
    width: 80%;
    max-width: 800px;
    max-height: 80vh;
}

/* === System Internals Grid === */
.system-internals-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1rem;
}
.grid-item-wide { grid-column: span 3; }

/* === Strategic Ops Grid === */
.strategic-ops-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
}
.span-1 { grid-column: span 1; }
.span-2 { grid-column: span 2; }


/* === Knowledge Base Grid === */
.knowledge-base-grid {
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: 1rem;
    height: 100%;
}
.kb-main, .kb-side {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

/* === Live Comms === */
.live-comms-grid {
    display: grid;
    grid-template-columns: 2fr 1fr;
    grid-template-rows: auto 1fr;
    gap: 1rem;
    height: 100%;
    grid-template-areas: 
        "video sidebar"
        "transcription sidebar";
}
.live-video-main { grid-area: video; }
.live-sidebar { grid-area: sidebar; display: flex; flex-direction: column; gap: 1rem; }
.live-transcription { grid-area: transcription; }

.video-feed-container { height: 100%; }
.video-wrapper {
    background: #000;
    width: 100%;
    aspect-ratio: 16 / 9;
    display: flex;
    justify-content: center;
    align-items: center;
    border: 1px solid var(--lcars-secondary);
}
.live-video { width: 100%; height: 100%; object-fit: cover; }
.video-error-message {
    padding: 1rem;
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100%;
}
.video-error-message h3 {
    color: var(--lcars-primary);
    font-family: 'Orbitron';
    margin-bottom: 0.5rem;
}
.phone-placeholder { padding: 1rem; text-align: center; color: var(--lcars-tertiary); }

.live-status-indicator {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 1.2rem;
    font-family: 'Orbitron';
}
.live-status-dot { width: 15px; height: 15px; border-radius: 50%; }
.live-status-dot.idle, .live-status-dot.closed { background-color: #666; }
.live-status-dot.connecting { background-color: var(--status-active); animation: pulse 1.5s infinite; }
.live-status-dot.active { background-color: var(--status-nominal); }
.live-status-dot.error { background-color: var(--status-error); }
.live-controls { margin-top: 1rem; }
.live-controls .disconnect { background-color: #cc6666; }
.live-controls .disconnect:hover { background-color: #ff6666; }
.transcription-display { height: 100%; overflow-y: auto; }
.transcription-history { height: 100%; overflow-y: auto; background: #000; border: 1px solid var(--lcars-secondary); padding: 1rem; }
.transcription-turn { border-bottom: 1px dashed #333; padding-bottom: 0.5rem; margin-bottom: 0.5rem; }
.transcription-turn p { margin: 0; }

.phone-connect-panel button { display: flex; align-items: center; justify-content: center; gap: 0.5rem; }
.qr-placeholder { background: #fff; padding: 1rem; margin: 1rem auto; width: 150px; height: 150px; display:flex; justify-content:center; align-items:center; }
.qr-placeholder svg { width: 100px; height: 100px; color: #000; }
.code-input { display: flex; }
.code-input input { text-align: center; font-size: 1.2rem; letter-spacing: 0.5em; }

/* === ARAS Lab Zones === */
.zonal-view-grid, .fabrication-grid, .control-room-grid, .main-bay-grid-upgraded {
    display: grid;
    gap: 1rem;
}
.control-room-grid {
    grid-template-columns: 2fr 1fr;
    grid-template-rows: auto 1fr;
    grid-template-areas: "videowall agent" "systems agent";
}
.cr-videowall { grid-area: videowall; }
.cr-systems { grid-area: systems; }
.cr-agent { grid-area: agent; }

.video-wall-grid { display: grid; grid-template-columns: repeat(3, 1fr); gap: 0.5rem; }
.video-feed { background: #000; border: 1px solid var(--lcars-secondary); aspect-ratio: 16/9; padding: 0.5rem; position: relative; }
.video-feed .label { font-size: 0.8rem; }
.video-feed .live-dot { position: absolute; top: 0.5rem; right: 0.5rem; color: var(--status-error); font-weight: bold; }
.systems-grid { display: grid; grid-template-columns: 1fr 1fr; gap: 1rem; }

.main-bay-grid-upgraded {
    grid-template-columns: 2fr 1fr;
    grid-template-rows: 1fr auto;
    grid-template-areas: "infra support" "infra log";
}
.mb-infra-panel { grid-area: infra; }
.mb-support-panel { grid-area: support; display: flex; flex-direction: column; gap: 1rem; }
.mb-log-panel { grid-area: log; }

.operations-log-feed { overflow-y: auto; height: 100%; }

.fabrication-grid {
    grid-template-columns: 1fr 1fr;
    grid-template-areas: "printers cnc" "printers laser" "inventory safety";
}
.fab-printers { grid-area: printers; }
.fab-cnc { grid-area: cnc; }
.fab-laser { grid-area: laser; }
.fab-inventory { grid-area: inventory; }
.fab-safety { grid-area: safety; }

.machine-status { margin-bottom: 0.5rem; }
.status-indicator { display: flex; justify-content: space-between; font-weight: bold; }

/* === Specialized Dashboards (Layout Fixes) === */
.logistics-dashboard-grid, .quantum-dashboard-grid, .atoi-dashboard-grid, .decentralized-dashboard-grid, .robotics-dashboard-grid, .neuromorphic-dashboard-grid {
    display: grid;
    gap: 1rem;
    grid-auto-rows: min-content; /* Prevent rows from stretching unnecessarily */
}

.logistics-dashboard-grid {
    grid-template-columns: repeat(3, 1fr);
    grid-template-areas: "overview overview map" "inventory routes map" "alerts alerts report";
}
.logistics-overview { grid-area: overview; }
.logistics-map { grid-area: map; }
.logistics-inventory { grid-area: inventory; }
.logistics-routes { grid-area: routes; }
.logistics-alerts { grid-area: alerts; }
.logistics-report { grid-area: report; }

.quantum-dashboard-grid {
    grid-template-columns: 2fr 1fr;
    grid-template-areas: "main sidebar";
}
.quantum-main { grid-area: main; }
.quantum-sidebar { grid-area: sidebar; display: flex; flex-direction: column; gap: 1rem; }

.atoi-dashboard-grid {
    grid-template-columns: repeat(3, 1fr);
    grid-template-areas: "overview overview missions" "viewport viewport viewport" "analytics analytics decision";
}
.atoi-overview { grid-area: overview; }
.atoi-missions { grid-area: missions; }
.atoi-viewport { grid-area: viewport; }
.atoi-analytics { grid-area: analytics; }
.atoi-decision { grid-area: decision; }

.decentralized-dashboard-grid {
    grid-template-columns: 1fr 1fr;
    grid-template-areas: "monitor contracts" "resources visualization" "ledger ledger";
}
.dlt-network-monitor { grid-area: monitor; }
.dlt-smart-contracts { grid-area: contracts; }
.dlt-ledger { grid-area: ledger; }
.dlt-resources { grid-area: resources; }
.dlt-visualization { grid-area: visualization; }

.robotics-dashboard-grid {
    grid-template-columns: 2fr 1fr;
    grid-template-areas: "viewport fleet-status" "viewport task-queue" "viewport sensor-fusion";
}
.robotics-viewport { grid-area: viewport; }
.robotics-fleet-status { grid-area: fleet-status; }
.robotics-task-queue { grid-area: task-queue; }
.robotics-sensor-fusion { grid-area: sensor-fusion; }


.neuromorphic-dashboard-grid {
    grid-template-columns: 2fr 1fr;
    grid-template-areas: "visualizer sidebar" "offload sidebar";
}
.nm-visualizer { grid-area: visualizer; }
.nm-sidebar { grid-area: sidebar; display: flex; flex-direction: column; gap: 1rem; }
.nm-offload { grid-area: offload; }

/* === Advanced Visuals === */

/* ATOI Viewport Scanner */
.atoi-map-container { position: relative; width: 100%; min-height: 300px; background: #050510; border: 1px solid var(--lcars-secondary); overflow: hidden; }
.atoi-map-container::before {
    content: '';
    position: absolute;
    top: 0; left: 0; right: 0; bottom: 0;
    background-image: linear-gradient(rgba(153,204,255,0.2) 1px, transparent 1px), linear-gradient(90deg, rgba(153,204,255,0.2) 1px, transparent 1px);
    background-size: 20px 20px;
    pointer-events: none;
}
.atoi-map-container::after {
    content: '';
    position: absolute;
    top: 0; left: 0; right: 0; height: 100%;
    background: linear-gradient(to bottom, transparent 0%, var(--lcars-tertiary) 50%, transparent 100%);
    opacity: 0.3;
    animation: sweep 4s linear infinite;
}
@keyframes sweep { 0% { top: -100%; } 100% { top: 100%; } }
.atoi-unit-icon { position: absolute; width: 12px; height: 12px; transform: translate(-50%, -50%); cursor: pointer; border-radius: 50%; z-index: 1; }
.atoi-unit-icon.drone { background: var(--lcars-tertiary); }
.atoi-unit-icon.ground-unit { background: var(--lcars-primary); border-radius: 0; }
.atoi-unit-icon.status-maintenance { background: #666; }

/* Robotics 3D Viewport */
.robotics-3d-viewport {
    background: #000;
    border: 1px solid var(--lcars-secondary);
    min-height: 300px;
    perspective: 800px;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    position: relative;
}
.robotics-3d-viewport::before {
    content: '';
    position: absolute;
    top: 50%; left: 0; right: 0;
    height: 1px;
    background: linear-gradient(90deg, transparent, var(--lcars-tertiary), transparent);
    z-index: 0;
}
.scene {
    position: relative;
    width: 300px;
    height: 300px;
    transform-style: preserve-3d;
    transform: rotateX(60deg) rotateZ(0deg);
}
.robot-manipulator, .robot-ugv, .robot-drone {
    position: absolute;
    transform-style: preserve-3d;
    transition: transform 0.1s linear;
}
.robot-manipulator::after {
    content: '';
    width: 20px; height: 20px;
    background: var(--lcars-primary);
    position: absolute;
    transform: translate(-50%, -50%);
}
.robot-ugv::after {
     content: '';
    width: 25px; height: 25px;
    background: var(--lcars-secondary);
    position: absolute;
    transform: translate(-50%, -50%);
}
.robot-drone::after {
    content: '';
    width: 15px; height: 15px;
    background: var(--lcars-tertiary);
    border-radius: 50%;
    position: absolute;
    transform: translate(-50%, -50%);
    box-shadow: 0 0 10px var(--lcars-tertiary);
}


/* Quantum Circuit Visualizer */
.circuit-visualizer {
    background-color: #000;
    border: 1px solid var(--lcars-secondary);
    padding: 1rem;
    font-family: monospace;
    white-space: pre;
    overflow-x: auto;
}

/* Decentralized Ledger Blocks */
.transaction-ledger-feed { max-height: 250px; overflow-y: auto; display: flex; flex-direction: column-reverse; }
.tx-item { font-family: monospace; font-size: 0.8rem; padding: 0.2rem; border-bottom: 1px solid #222; }
.tx-time { color: var(--lcars-tertiary); }
.tx-type { color: var(--lcars-primary); margin: 0 0.5rem; }
.tx-details { color: #aaa; }


/* Neuromorphic Hardware Monitor */
.neuromorphic-board {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    padding: 1rem;
    background: #0a0a1a;
    border: 1px solid var(--lcars-secondary);
}
.neuromorphic-chip {
    width: 80px;
    height: 80px;
    background: #333;
    border: 2px solid var(--lcars-tertiary);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
}
.chip-id { font-weight: bold; font-family: 'Orbitron'; }
.chip-status { display: flex; align-items: center; gap: 0.5rem; margin-top: 0.5rem; }
.chip-status-dot { width: 10px; height: 10px; border-radius: 50%; }
.chip-status-dot.online { background-color: var(--status-nominal); }
.chip-status-dot.offline { background-color: var(--status-offline); }

.event-stream-visualizer {
    background: #000;
    border: 1px solid var(--lcars-secondary);
    position: relative;
    height: 100%;
    min-height: 200px;
    overflow: hidden;
}
.event-spike {
    position: absolute;
    width: 100%;
    height: 1px;
    background: linear-gradient(90deg, transparent, var(--lcars-primary), transparent);
    opacity: 0;
    animation: fire-spike 0.5s ease-out forwards;
}
@keyframes fire-spike {
    0% { transform: scaleX(0); opacity: 1; }
    50% { transform: scaleX(1); opacity: 1; }
    100% { transform: scaleX(1); opacity: 0; }
}

.fleet-item {
    padding: 0.5rem;
    border-bottom: 1px solid #333;
}
.fleet-controls {
    display: flex;
    gap: 0.5rem;
    margin-top: 0.5rem;
}
.fleet-controls button {
    font-size: 0.75rem;
    padding: 0.2rem 0.5rem;
}

.task-queue-list { list-style: none; padding: 0; }
.task-queue-list li {
    display: flex;
    justify-content: space-between;
    padding: 0.3rem 0;
    border-bottom: 1px solid #333;
}

.robotics-dashboard-grid {
    grid-template-columns: 2fr 1fr;
    grid-template-areas: "viewport fleet-status" "viewport task-queue" "viewport sensor-fusion";
}
